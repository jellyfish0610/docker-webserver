log_format timed_combined '$http_x_real_ip - $remote_user [$time_local] $request_time "$request" $status $bytes_sent "$http_referer" "$http_user_agent"';

upstream fpm_backend {
  server <PHPFPM_HOST>:<PHPFPM_PORT> max_fails=0 fail_timeout=0;
}

large_client_header_buffers 16 32k;

map $http_x_forwarded_proto $main_proto {
    default "http";
    https "https";
}

# Main handler, without API

# www-redirect
server {
    listen 80;
    listen [::]:80;

    server_name  www.<DOMAIN_PLACEHOLDER>;
    rewrite ^(.*) $main_proto://<DOMAIN_PLACEHOLDER>$1 permanent;
}

server {

  listen 80;
  listen [::]:80;

  client_max_body_size 32m;

  server_name <DOMAIN_PLACEHOLDER>;
  server_name boodmo.<DOMAIN_PLACEHOLDER>;
  server_name static.<DOMAIN_PLACEHOLDER>;

  root   /app/public;
  autoindex off;
  proxy_ignore_client_abort on;
  merge_slashes off;

  pagespeed on;
  pagespeed FileCachePath /var/cache/nginx/pagespeed;
  pagespeed RewriteLevel PassThrough;
  pagespeed EnableFilters recompress_images,rewrite_css,rewrite_javascript_inline,remove_comments,collapse_whitespace;
  pagespeed XHeaderValue "Powered By ngx_pagespeed";

  # Ensure requests for pagespeed optimized resources go to the pagespeed handler
  # and no extraneous headers get set.
  location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
    add_header "" "";
  }
  location ~ "^/pagespeed_static/" { }
  location ~ "^/ngx_pagespeed_beacon$" { }


  <ACCESS_LOG_PLACEHOLDER>
  <ERROR_LOG_PLACEHOLDER>

  # Block access to "hidden" files and directories whose names begin with a
  # period. This includes directories used by version control systems such
  # as Subversion or Git to store control files.
  location ~ (^|/)\. {
    return 403;
  }

  # Block access for bots, header will set on LB proxy
  if ($http_x_badbot ~ (1)) {
    return 403;
  }

  # clean and redirect double slashes
  if ($request_uri ~ .*//.*) {
    rewrite (.*)//+(.*) $1/$2 permanent;
  }

  if ($request_uri ~ /sitemap[^/]*\.xml) {
    rewrite /sitemap([^/]*)\.xml /media/sitemaps/sitemap$1.xml;
  }
  
  if ($request_uri ~ /secure_sitemap[^/]*\.xml) {
    rewrite /secure_sitemap([^/]*)\.xml /media/sitemaps/secure_sitemap$1.xml;
  }


  if ($request_uri ~ ((?i)\/pages|\/brands|\/catalog|\/vehicles(?-i))(.*)) {
      rewrite ^([^.]*[^/])$ $1/ permanent;
  }

  location @rewriteindex {
    rewrite ^(.*)$ /index.php/$1 last;
  }

  location / {
    <HTTP_AUTH>
    # try to serve file directly, fallback to app.php
    try_files $uri @rewriteindex;

  }

  ## Forward paths like /js/index.php/x.js to relevant handler
  location ~ .php/ {
    rewrite ^(.*.php)/ $1 last;
  }

  location = /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    allow 172.30.0.166;
    deny all;
  }


 location ~ \.php {
    if ($request_uri = /index.php) {
      rewrite ^ $main_proto://$host? permanent;
    }
    fastcgi_pass fpm_backend;
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param HTTPS $http_X_Forwarded_Https;
    fastcgi_param REMOTE_ADDR $http_X_FORWARDED_FOR;
    fastcgi_param APPLICATION_SCOPE site;
    fastcgi_buffers 256 32k;
    fastcgi_buffer_size 256k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_param APPLICATION_ENV <APPLICATION_ENV>;
    fastcgi_read_timeout 2400;
    fastcgi_ignore_client_abort on;
  }


  location ~ (/img/|/media/cache|\.css|\.js|\.jpg|\.png|\.gif|\.ico) {
    auth_basic off;
    expires 240h;
    try_files $uri  @rewriteindex;
  }

}

# API handler
server {

  listen 80;
  listen [::]:80;

  client_max_body_size 32m;

  server_name api.<DOMAIN_PLACEHOLDER>;
  server_name mobile.<DOMAIN_PLACEHOLDER>;

  root   /app/public;
  autoindex off;
  proxy_ignore_client_abort on;
  
  <ACCESS_LOG_PLACEHOLDER>
  <ERROR_LOG_PLACEHOLDER>


  # Block access to "hidden" files and directories whose names begin with a
  # period. This includes directories used by version control systems such
  # as Subversion or Git to store control files.
  location ~ (^|/)\. {
    return 403;
  }

  # Do NOT honour HTTP authentication when requesting special URL patterns
  location ~ "^/v1/api/" {
    auth_basic  off;
    # try to serve file directly, fallback to app.php
    try_files $uri  @rewriteindex;
  }

  location @rewriteindex {
    rewrite ^(.*)$ /index.php/$1 last;
  }

  location / {
    # try to serve file directly, fallback to app.php
    try_files $uri  @rewriteindex;

  }

  ## Forward paths like /js/index.php/x.js to relevant handler
  location ~ .php/ {
    rewrite ^(.*.php)/ $1 last;
  }



location ~ \.php {
    fastcgi_pass fpm_backend;
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param HTTPS $http_X_Forwarded_Https;
    fastcgi_param REMOTE_ADDR $http_X_FORWARDED_FOR;
    fastcgi_param APPLICATION_SCOPE api;
    fastcgi_buffers 256 32k;
    fastcgi_buffer_size 256k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;
    fastcgi_param APPLICATION_ENV <APPLICATION_ENV>;
    fastcgi_read_timeout 2400;
    fastcgi_ignore_client_abort on;
  }
}
